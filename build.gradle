plugins {
    id 'signing'
    id 'maven'
    id 'maven-publish'
    id 'fabric-loom' version '0.2.4-SNAPSHOT'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = "${project.archives_base_name}-${project.minecraft_version}"
version = project.mod_version
group = project.maven_group

minecraft {
}

configurations {
    fatJar

    compile.extendsFrom fatJar
}

repositories {
    mavenCentral()

    maven { url "https://maven.issizler.club" }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}"

    modCompile "net.fabricmc:fabric-loader:${project.loader_version}"

    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'

    fatJar 'jline:jline:2.14.6'
    fatJar 'org.fusesource.jansi:jansi:1.18'
    fatJar 'org.cactoos:cactoos:0.41'
    fatJar 'org.jetbrains:annotations:17.0.0'

    fatJar 'com.electronwill.night-config:toml:3.4.0'
    fatJar("club.issizler.okyanus:api:${project.version}") { // always TODO: increment the API version
        exclude group: "org.apache.commons"
    }
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version.replace("-SNAPSHOT", "")
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

jar {
    from {
        configurations.fatJar.collect { it.isDirectory() ? it : zipTree(it) }
    }
}


// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                name = "Okyanus Runtime"
                description = "Runtime for the Okyanus API"
                url = "https://okyanus-mc.github.io/"

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'admicos'
                        name = 'Ecmel Berk CanlÄ±er'
                        email = 'me@ecmelberk.com'
                    }
                }
            }

            groupId = "${group}"
            artifactId = 'runtime'
            version = getVersion()

            artifact(jar.archivePath) {
                builtBy remapJar
            }

            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
        maven {
            url = "https://maven.issizler.club"

            if (project.hasProperty("nexusPassword")) {
                credentials {
                    username "admin"
                    password "${nexusPassword}"
                }
            }
        }
    }
}

signing {
    required { !version.endsWith("-SNAPSHOT") }
    sign publishing.publications.mavenJava
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
        }
    }
}